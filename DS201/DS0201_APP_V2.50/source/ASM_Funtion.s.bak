;********************* (C) COPYRIGHT 2009 e-Design Co.,Ltd. *********************
; 文件名  : ASM_Funtion.s 文件说明 : 汇编语言子程序      硬件环境 : DS0201V1.1~1.6
; 作者    : bure          当前版本 : Ver 1.0.1           完成日期 : 2009/08/06    
;*******************************************************************************

  THUMB
  REQUIRE8
  PRESERVE8
    
  AREA |.text|, CODE, READONLY, ALIGN=2
; RSEG CODE:CODE(2)

  EXPORT __MSD_Init  
  EXPORT __Get_Medium_Characteristics  
  EXPORT __USB_Init  
  EXPORT __CTR_HP
  EXPORT __USB_Istr
  
  EXPORT __Char_to_Str
  EXPORT __Char_to_Hex
  EXPORT __Int_sqrt
  
  EXPORT __Set_System
  EXPORT __NVIC_Configuration
  EXPORT __GPIO_Config
  EXPORT __SPI_Config
  EXPORT __DMA_Configuration
  EXPORT __ADC_Configuration
  
  EXPORT __LCD_WR_REG
  EXPORT __Point_SCR
  EXPORT __Set_Pixel
  EXPORT __Add_Pixel
  EXPORT __Erase_Pixel

  EXPORT __MSD_WriteBlock
  EXPORT __MSD_ReadBlock
  EXPORT __Get_TAB_8x14
  EXPORT __Get_TAB_6x12
  EXPORT __Display_Logo
  EXPORT __LCD9325_Initial 
  EXPORT __LCD7781_Initial
  EXPORT __Get_Ref_Wave

  EXPORT __Erase_Color
  EXPORT __Add_Color
  EXPORT __Get_Pixel
  
GPIO          =   0x4001
LCD_DATA_PORT =   0x1800   ;PORT_E
LCD_Ctrl_PORT =   0x1400   ;PORT_D
CRH           =   0x00
CRL           =   0x04
IDR           =   0x08
ODR           =   0x0C
OUT_H         =   0x10
OUT_L         =   0x14

LCD_RS        =   0x02
LCD_WR        =   0x20
LCD_RD        =   0x10
LCD_RST       =   0x01

C_GROUP       =   0x1082
T_GROUP       =   0x0821
F_SELEC       =   0x18E3
GRD_FLAG      =   0x0040
LN1_FLAG      =   0x0020
LN2_FLAG      =   0x0800
GRD_COLOR     =   0x4248
LN1_COLOR     =   0x8730
LN2_COLOR     =   0x8C10

;*******************************************************************************
; 库函数入口地址向量表 
;*******************************************************************************
__MSD_Init                ;void __MSD_Init(void)
    B       0x08004151
__Get_Medium_Characteristics  ;void __Get_Medium_Characteristics(void)
    B       0x08004155
__USB_Init                ;void __USB_Init(void)
    B       0x08004159
__CTR_HP                  ;void __CTR_HP(void)
    B       0x0800415D
__USB_Istr                ;void __USB_Istr(void);
    B       0x08004161
;-------------------------------------------------------------------------------    
__Char_to_Str             ;void __Char_to_Str(unsigned char *p, unsigned char n)
    B       0x08004165
__Char_to_Hex             ;void __Char_to_Hex(unsigned char *p, unsigned char n)
    B       0x08004169
__Int_sqrt                ;int __Int_sqrt(unsigned int n)
    B       0x0800416D
;-------------------------------------------------------------------------------
__Set_System              ;void __Set_System(void)
    B       0x08004171
__NVIC_Configuration      ;void __NVIC_Configuration(void)
    B       0x08004175
__GPIO_Config             ;void __GPIO_Config(void)
    B       0x08004179
__SPI_Config              ;void __SPI_Config(void)
    B       0x0800417D
__DMA_Configuration       ;void __DMA_Configuration(void)
    B       0x08004181
__ADC_Configuration       ;void __ADC_Configuration(void)
    B       0x08004185
;-------------------------------------------------------------------------------
__MSD_WriteBlock          ;u8 __MSD_WriteBlock(u8* pBuffer, u32 WriteAddr, u16 NumByteToWrite)
    B       0x08004189 
__MSD_ReadBlock           ;u8 __MSD_ReadBlock(u8* pBuffer, u32 ReadAddr, u16 NumByteToRead)
    B       0x0800418D 
__Get_TAB_8x14            ;unsigned short __Get_TAB_8x14(unsigned char Code, unsigned short Row)
    B       0x08004191
__Get_TAB_6x12            ;unsigned short __Get_TAB_6x12(unsigned char Code, unsigned short Row)
    B       0x08004195
__Display_Logo            ;void __Display_Logo(unsigned short Dot_x, unsigned short Dot_y)
    B       0x08004199
__LCD9325_Initial         ;void __LCD9325_Initial(void) 
    B       0x0800419D
__LCD7781_Initial         ;void __LCD7781_Initial(void)
    B       0x080041A1
__Get_Ref_Wave            ;unsigned char __Get_Ref_Wave(unsigned short i)
    B       0x080041A5
;-------------------------------------------------------------------------------
__LCD_WR_REG              ;void __LCD_WR_REG(unsigned short Reg, unsigned short Data)
    B       0x08000151
__Add_Pixel               ;void __Add_Pixel(unsigned short x0, unsigned short y0, unsigned short Color)
    B       0x08000227
__Point_SCR               ;void __Point_SCR(unsigned short x0, unsigned short y0)
    B       0x08000189
__Set_Pixel               ;void __Set_Pixel(unsigned short Color)
    B       0x08000205
__Erase_Pixel             ;void __Erase_Pixel(unsigned short x0, unsigned short y0, unsigned short Color)
    B       0x08000375


;*******************************************************************************
__Add_Color             ;void __Add_Color(unsigned short x,unsigned short y,unsigned short Color)

    STMDB   SP!, {R4-R7}       

    MOVW    R7,  #LCD_DATA_PORT  
    MOVT    R7,  #GPIO  
    MOVW    R6,  #LCD_Ctrl_PORT
    MOVT    R6,  #GPIO  
    MOVS    R3,  #LCD_RS 
    MOVS    R4,  #LCD_WR
    
    MOVS    R5,  #0x20              ;Y_Addr REG. 
    STR     R5,  [R7, #ODR]         ;[LCD_DATA] = Y_Addr REG.
    STR     R3,  [R6, #OUT_L]       ;RS = 0
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1
    STR     R3,  [R6, #OUT_H]       ;RS = 1
    STR     R1,  [R7, #ODR]         ;[LCD_DATA] = Y_Addr
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1

    MOVS    R5,  #0x21              ;X_Addr REG. 
    STR     R5,  [R7, #ODR]         ;[LCD_DATA] = X_Addr REG.
    STR     R3,  [R6, #OUT_L]       ;RS = 0
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1
    STR     R3,  [R6, #OUT_H]       ;RS = 1
    STR     R0,  [R7, #ODR]         ;[LCD_DATA] = X_Addr
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1

    MOVS    R5,  #0x22              ;GRAM_Addr REG. 
    STR     R5,  [R7, #ODR]         ;[LCD_DATA] = GRAM_Addr REG.
    STR     R3,  [R6, #OUT_L]       ;RS = 0
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1
    STR     R3,  [R6, #OUT_H]       ;RS = 1

    MOVS    R5,  #0x44444444        ;INPUT MODE  
    STR     R5,  [R7, #CRL]
    STR     R5,  [R7, #CRH]

    MOVS    R0,  #LCD_RD 
    STR     R0,  [R6, #OUT_L]       ;RD=0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL 
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL 
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL 
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL 
    
    STR     R0,  [R6, #OUT_H]       ;RD=1 

    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL  
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL  
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL  
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL  
    
    STR     R0,  [R6, #OUT_L]       ;RD = 0

    MOVW    R6,  #LCD_DATA_PORT
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    MOVW    R6,  #LCD_DATA_PORT
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL  
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL  
    
    LDR     R3,  [R7, #IDR]         ;R3 = [LCD_DATA]
    
    STR     R0,  [R6, #OUT_H]       ;RD = 1

    MOVS    R5,  #0x33333333        ;OUTPUT MODE  
    STR     R5,  [R7, #CRL]
    STR     R5,  [R7, #CRH]

    MOVS    R0,  #LCD_RS 
    MOVS    R5,  #0x20              ;Y_Addr REG. 
    STR     R5,  [R7, #ODR]         ;[LCD_DATA] = Y_Addr REG.
    STR     R0,  [R6, #OUT_L]       ;RS = 0
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1
    STR     R0,  [R6, #OUT_H]       ;RS = 1
    STR     R1,  [R7, #ODR]         ;[LCD_DATA] = Y_Addr
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1

    MOVS    R5,  #0x22              ;GRAM_Addr REG. 
    STR     R5,  [R7, #ODR]         ;[LCD_DATA] = GRAM_Addr REG.
    STR     R0,  [R6, #OUT_L]       ;RS = 0
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1
    STR     R0,  [R6, #OUT_H]       ;RS = 1

    MOVW    R5,  #C_GROUP
    ANDS    R0,  R3,  R5
    BEQ     ADD_1                   ;If Original color is not curve then go
    MOVW    R5,  #F_SELEC
    AND     R2,  R2,  R5            ;Erase all current color and kept all flgas
    ORR     R3,  R3,  R2            ;Only add current color flag
    B       ADD_2
ADD_1    
    MOVW    R5,  #F_SELEC
    AND     R3,  R3,  R5            ;Erase all current color and kept all flgas
    ORR     R3,  R3,  R2            ;Only add current flag
ADD_2:
    STR     R3,  [R7, #ODR]         ;[LCD_DATA] = R3
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1
    
    LDMIA   SP!, {R4-R7}           
    BX      LR


;*******************************************************************************
__Erase_Color             ;void __Erase_Color(unsigned short x,unsigned short y,unsigned short Color)

    STMDB   SP!, {R4-R7}       

    MOVW    R7,  #LCD_DATA_PORT  
    MOVT    R7,  #GPIO  
    MOVW    R6,  #LCD_Ctrl_PORT
    MOVT    R6,  #GPIO  
    MOVS    R3,  #LCD_RS 
    MOVS    R4,  #LCD_WR
    
    MOVS    R5,  #0x20              ;Y_Addr REG. 
    STR     R5,  [R7, #ODR]         ;[LCD_DATA] = Y_Addr REG.
    STR     R3,  [R6, #OUT_L]       ;RS = 0
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1
    STR     R3,  [R6, #OUT_H]       ;RS = 1
    STR     R1,  [R7, #ODR]         ;[LCD_DATA] = Y_Addr
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1

    MOVS    R5,  #0x21              ;X_Addr REG. 
    STR     R5,  [R7, #ODR]         ;[LCD_DATA] = X_Addr REG.
    STR     R3,  [R6, #OUT_L]       ;RS = 0
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1
    STR     R3,  [R6, #OUT_H]       ;RS = 1
    STR     R0,  [R7, #ODR]         ;[LCD_DATA] = X_Addr
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1

    MOVS    R5,  #0x22              ;GRAM_Addr REG. 
    STR     R5,  [R7, #ODR]         ;[LCD_DATA] = GRAM_Addr REG.
    STR     R3,  [R6, #OUT_L]       ;RS = 0
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1
    STR     R3,  [R6, #OUT_H]       ;RS = 1

    MOVS    R5,  #0x44444444        ;INPUT MODE  
    STR     R5,  [R7, #CRL]
    STR     R5,  [R7, #CRH]

    MOVS    R0,  #LCD_RD 
    STR     R0,  [R6, #OUT_L]       ;RD=0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL 
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL 
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL 
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL 
    
    STR     R0,  [R6, #OUT_H]       ;RD=1 

    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL  
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL  
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL  
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL  
    
    STR     R0,  [R6, #OUT_L]       ;RD = 0

    MOVW    R6,  #LCD_DATA_PORT
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    MOVW    R6,  #LCD_DATA_PORT
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL  
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL  
    
    LDR     R3,  [R7, #IDR]         ;R3 = [LCD_DATA]
    
    STR     R0,  [R6, #OUT_H]       ;RD = 1

    MOVS    R5,  #0x33333333        ;OUTPUT MODE  
    STR     R5,  [R7, #CRL]
    STR     R5,  [R7, #CRH]

    MOVS    R0,  #LCD_RS 
    MOVS    R5,  #0x20              ;Y_Addr REG. 
    STR     R5,  [R7, #ODR]         ;[LCD_DATA] = Y_Addr REG.
    STR     R0,  [R6, #OUT_L]       ;RS = 0
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1
    STR     R0,  [R6, #OUT_H]       ;RS = 1
    STR     R1,  [R7, #ODR]         ;[LCD_DATA] = Y_Addr
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1

    MOVS    R5,  #0x22              ;GRAM_Addr REG. 
    STR     R5,  [R7, #ODR]         ;[LCD_DATA] = GRAM_Addr REG.
    STR     R0,  [R6, #OUT_L]       ;RS = 0
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1
    STR     R0,  [R6, #OUT_H]       ;RS = 1

    MOVW    R5,  #C_GROUP
    ANDS    R0,  R2,  R5
    BNE     ERASE_0                 ;if current color is curve then go
    MOVW    R5,  #C_GROUP
    ANDS    R0,  R3,  R5
    BEQ     ERASE_0                 ;if Original color is not curve then go
    MOVW    R5,  #F_SELEC
    AND     R2,  R2,  R5
    B       ERASE_3
ERASE_0:
    MOVW    R5,  #F_SELEC
    AND     R3,  R3,  R5            ;Erase all original color and kept all flgas
    AND     R2,  R2,  R5            ;Extract current color flag
    BIC     R3,  R3,  R2            ;Erase current color flag
    
    MOVW    R5,  #GRD_FLAG
    ANDS    R5,  R5,  R3
    BEQ     ERASE_1
    MOVW    R5,  #GRD_COLOR
    ORR     R3,  R3,  R5            ;Restore grid color
    B       ERASE_3
ERASE_1:
    MOVW    R5,  #LN1_FLAG
    ANDS    R5,  R5,  R3
    BEQ     ERASE_2
    MOVW    R5,  #LN1_COLOR
    ORR     R3,  R3,  R5            ;Restore line#1 color
    B       ERASE_3
ERASE_2:
    MOVW    R5,  #LN2_FLAG
    ANDS    R5,  R5,  R3
    BEQ     ERASE_3
    MOVW    R5,  #LN2_COLOR
    ORR     R3,  R3,  R5            ;Restore line#2 color
ERASE_3:    
    STR     R3,  [R7, #ODR]         ;[LCD_DATA] = R3
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1
    
    LDMIA   SP!, {R4-R7}           
    BX      LR

;*******************************************************************************
__Get_Pixel     ;unsigned short __Get_Pixel(unsigned short x0,unsigned short y0)

    STMDB   SP!, {R4-R7}       

    MOVW    R7,  #LCD_DATA_PORT  
    MOVT    R7,  #GPIO  
    MOVW    R6,  #LCD_Ctrl_PORT
    MOVT    R6,  #GPIO  
    MOVS    R3,  #LCD_RS 
    MOVS    R4,  #LCD_WR
    
    MOVS    R5,  #0x20              ;Y_Addr REG. 
    STR     R5,  [R7, #ODR]         ;[LCD_DATA] = Y_Addr REG.
    STR     R3,  [R6, #OUT_L]       ;RS = 0
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1
    STR     R3,  [R6, #OUT_H]       ;RS = 1
    STR     R1,  [R7, #ODR]         ;[LCD_DATA] = Y_Addr
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1

    MOVS    R5,  #0x21              ;X_Addr REG. 
    STR     R5,  [R7, #ODR]         ;[LCD_DATA] = X_Addr REG.
    STR     R3,  [R6, #OUT_L]       ;RS = 0
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1
    STR     R3,  [R6, #OUT_H]       ;RS = 1
    STR     R0,  [R7, #ODR]         ;[LCD_DATA] = X_Addr
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1

    MOVS    R5,  #0x22              ;GRAM_Addr REG. 
    STR     R5,  [R7, #ODR]         ;[LCD_DATA] = GRAM_Addr REG.
    STR     R3,  [R6, #OUT_L]       ;RS = 0
    STR     R4,  [R6, #OUT_L]       ;WR = 0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    
    STR     R4,  [R6, #OUT_H]       ;WR = 1
    STR     R3,  [R6, #OUT_H]       ;RS = 1

    MOVS    R5,  #0x44444444        ;INPUT MODE  
    STR     R5,  [R7, #CRL]
    STR     R5,  [R7, #CRH]

    MOVS    R1,  #LCD_RD 
    STR     R1,  [R6, #OUT_L]       ;RD=0
    
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL 
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL 
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL 
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL 
    
    STR     R1,  [R6, #OUT_H]       ;RD=1 

    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL  
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL  
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL  
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL  
    
    STR     R1,  [R6, #OUT_L]       ;RD = 0

    MOVW    R6,  #LCD_DATA_PORT
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    MOVW    R6,  #LCD_DATA_PORT
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL  
    MOVW    R6,  #LCD_Ctrl_PORT  
    MOVT    R6,  #GPIO              ;DELAY 2 CYCEL  
    
    LDR     R0,  [R7, #IDR]         ;R3 = [LCD_DATA]
    
    STR     R1,  [R6, #OUT_H]       ;RD = 1

    MOVS    R5,  #0x33333333        ;OUTPUT MODE  
    STR     R5,  [R7, #CRL]
    STR     R5,  [R7, #CRH]

    
    LDMIA   SP!, {R4-R7}           
    BX      LR


  END

;******************************* END OF FILE ***********************************
  

